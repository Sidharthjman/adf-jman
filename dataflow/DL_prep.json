{
	"name": "DL_prep",
	"properties": {
		"folder": {
			"name": "quizapp"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_sql",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_sql",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_sql",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_sql",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          userID as integer,",
				"          QuizID as string,",
				"          mark as integer,",
				"          CreatorID as integer,",
				"          Sub_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          userID as string,",
				"          name as string,",
				"          password as string,",
				"          email as string,",
				"          admin as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1 derive(mark = iifNull(mark, 0, mark),",
				"          CreatorID = iif(\r",
				"    isNull(CreatorID) && startsWith(QuizID, 'tam'), 4,\r",
				"    iif(\r",
				"        isNull(CreatorID) && startsWith(QuizID, 'mat'), 1,\r",
				"        iif(\r",
				"            isNull(CreatorID) && startsWith(QuizID, 'phy'), 2,\r",
				"            iif(\r",
				"                isNull(CreatorID) && startsWith(QuizID, 'che'), 3,\r",
				"                iif(\r",
				"                    isNull(CreatorID) && startsWith(QuizID, 'bio'), 5,\r",
				"                    iif(\r",
				"                        isNull(CreatorID) && startsWith(QuizID, 'eng'), 6,\r",
				"                        CreatorID\r",
				"                    )\r",
				"                )\r",
				"            )\r",
				"        )\r",
				"    )\r",
				"),",
				"          Sub_date = iifNull(Sub_date, 'unknown', Sub_date)) ~> derivedColumn1",
				"source2 select(mapColumn(",
				"          userID,",
				"          name,",
				"          email,",
				"          admin",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          userID as string,",
				"          QuizID as string,",
				"          mark as string,",
				"          CreatorID as string,",
				"          Sub_date as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          userID as string,",
				"          QuizID as string,",
				"          mark as string,",
				"          CreatorID as string,",
				"          Sub_date as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}