{
	"name": "DF_cleaning",
	"properties": {
		"folder": {
			"name": "misumi"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink6"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink7"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink8"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink9"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink10"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink12"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink11"
				},
				{
					"dataset": {
						"referenceName": "DS_misumi_sql",
						"type": "DatasetReference"
					},
					"name": "sink13"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "window1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select1"
				},
				{
					"name": "window2"
				},
				{
					"name": "filter2"
				},
				{
					"name": "select2"
				},
				{
					"name": "window3"
				},
				{
					"name": "filter3"
				},
				{
					"name": "select3"
				},
				{
					"name": "window4"
				},
				{
					"name": "filter4"
				},
				{
					"name": "select4"
				},
				{
					"name": "window5"
				},
				{
					"name": "filter5"
				},
				{
					"name": "select5"
				},
				{
					"name": "window6"
				},
				{
					"name": "filter6"
				},
				{
					"name": "select6"
				},
				{
					"name": "window7"
				},
				{
					"name": "filter7"
				},
				{
					"name": "select7"
				},
				{
					"name": "window8"
				},
				{
					"name": "filter8"
				},
				{
					"name": "select8"
				},
				{
					"name": "window9"
				},
				{
					"name": "filter9"
				},
				{
					"name": "select9"
				},
				{
					"name": "window10"
				},
				{
					"name": "filter10"
				},
				{
					"name": "select10"
				},
				{
					"name": "window11"
				},
				{
					"name": "filter11"
				},
				{
					"name": "select11"
				},
				{
					"name": "window12"
				},
				{
					"name": "filter12"
				},
				{
					"name": "select12"
				},
				{
					"name": "window13"
				},
				{
					"name": "filter13"
				},
				{
					"name": "select13"
				}
			],
			"scriptLines": [
				"source(output(",
				"          category as string,",
				"          subCategory as string,",
				"          seriesCategoryCode as string,",
				"          seriesCategoryName as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          brandCode as string,",
				"          brandName as string,",
				"          imageUrl as string,",
				"          minStandardUnitPrice as string,",
				"          maxStandardUnitPrice as string,",
				"          minPricePerPiece as string,",
				"          maxPricePerPiece as string,",
				"          minStandardDaysToShip as string,",
				"          maxStandardDaysToShip as string,",
				"          stockItemFlag as string,",
				"          discontinuedProductFlag as string,",
				"          specialShipmentFlag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 split(category==\"Automation Components\",",
				"     category==\"Fasteners\",",
				"     category ==\"Wiring Components\",",
				"     category==\"Lab & Clean Room Supplies\",",
				"     category ==\"Machining Tools\",",
				"     category==\"Material Handling & Storage\",",
				"     category==\"Materials\",",
				"     category==\"Mold Heating Cooling Technology\",",
				"     category == \"Plastic Mold Components\",",
				"     category ==\"Press Die Components\",",
				"     category==\"Processing Tools\",",
				"     category==\"Safety & General Supplies\",",
				"     category==\"Electrical & Controls\",",
				"     disjoint: false) ~> split1@(AutomationComponents, Fasteners, WiringComponents, LabCleanRoomSupplies, MachiningTools, MaterialHandlingStorage, Materials, MoldHeatingCoolingTechnology, PlasticMoldComponents, PressDieComponents, ProcessingTools, SafetyGeneralSupplies, ElectricalControls)",
				"split1@AutomationComponents window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window1",
				"window1 filter(RNK==1) ~> filter1",
				"filter1 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"split1@WiringComponents window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window2",
				"window2 filter(RNK==1) ~> filter2",
				"filter2 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"split1@Fasteners window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window3",
				"window3 filter(RNK==1) ~> filter3",
				"filter3 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"split1@LabCleanRoomSupplies window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window4",
				"window4 filter(RNK==1) ~> filter4",
				"filter4 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"split1@MachiningTools window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window5",
				"window5 filter(RNK==1) ~> filter5",
				"filter5 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"split1@MaterialHandlingStorage window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window6",
				"window6 filter(RNK==1) ~> filter6",
				"filter6 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"split1@Materials window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window7",
				"window7 filter(RNK==1) ~> filter7",
				"filter7 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"split1@MoldHeatingCoolingTechnology window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window8",
				"window8 filter(RNK==1) ~> filter8",
				"filter8 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"split1@PlasticMoldComponents window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window9",
				"window9 filter(RNK==1) ~> filter9",
				"filter9 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"split1@PressDieComponents window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window10",
				"window10 filter(RNK==1) ~> filter10",
				"filter10 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"split1@ProcessingTools window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window11",
				"window11 filter(RNK==1) ~> filter11",
				"filter11 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          imageUrl,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag,",
				"          RNK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"split1@SafetyGeneralSupplies window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window12",
				"window12 filter(RNK==1) ~> filter12",
				"filter12 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select12",
				"split1@ElectricalControls window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     RNK = rowNumber()) ~> window13",
				"window13 filter(RNK==1) ~> filter13",
				"filter13 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select13",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
				"select5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink5",
				"select6 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink6",
				"select7 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink7",
				"select8 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink8",
				"select9 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink9",
				"select10 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink10",
				"select11 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink12",
				"select12 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink11",
				"select13 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink13"
			]
		}
	}
}